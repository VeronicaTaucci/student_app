{"ast":null,"code":"var _jsxFileName = \"/Users/veronica.t/Desktop/projects/react-redux-students-app/hw-redux-101/src/components/DeleteStudentByName.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { deleteStudentByName } from '../actions/studentsActions';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DeleteStudentByName = () => {\n  _s();\n\n  let allStudents = useSelector(state => state.students);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: allStudents.map(student => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [student.fName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 55\n          }, this), student.city, /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => dispatch(deleteStudentByName(student.fName)),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DeleteStudentByName, \"fZpyPM4htvxk/B06WeIC9TPXGbs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DeleteStudentByName;\nexport default DeleteStudentByName;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteStudentByName\");","map":{"version":3,"sources":["/Users/veronica.t/Desktop/projects/react-redux-students-app/hw-redux-101/src/components/DeleteStudentByName.jsx"],"names":["React","deleteStudentByName","useDispatch","useSelector","DeleteStudentByName","allStudents","state","students","dispatch","map","student","fName","city","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,mBAAT,QAAoC,4BAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAEhC,MAAIC,WAAW,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA7B;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,sBACE;AAAA,4BACE;AAAM,MAAA,MAAM,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBACGG,WAAW,CAACI,GAAZ,CAAgBC,OAAO,IAAI;AAC1B,4BAAO;AAAA,qBAAsBA,OAAO,CAACC,KAA9B,oBAAqC;AAAA;AAAA;AAAA;AAAA,kBAArC,EAA4CD,OAAO,CAACE,IAApD,eACL;AAAG,YAAA,IAAI,EAAC,GAAR;AAAY,YAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACP,mBAAmB,CAACS,OAAO,CAACC,KAAT,CAApB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADK;AAAA,WAASD,OAAO,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGD,OAJA;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAaD,CAjBD;;GAAMT,mB;UAEcD,W,EACDD,W;;;KAHbE,mB;AAmBN,eAAeA,mBAAf","sourcesContent":["import React from 'react'\n\nimport { deleteStudentByName } from '../actions/studentsActions'\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst DeleteStudentByName = () => {\n\n  let allStudents = useSelector((state) => state.students)\n  const dispatch = useDispatch()\n  return (\n    <>\n      <form action=\"\"></form>\n      <input type='text'></input>\n      <ul>\n        {allStudents.map(student => {\n          return <li key={student.id}>{student.fName} <br />{student.city}\n            <a href=\"#\" onClick={() => dispatch(deleteStudentByName(student.fName))}>X</a>\n          </li>\n        })}\n      </ul>\n    </>\n  )\n}\n\nexport default DeleteStudentByName\n\n\n\n"]},"metadata":{},"sourceType":"module"}