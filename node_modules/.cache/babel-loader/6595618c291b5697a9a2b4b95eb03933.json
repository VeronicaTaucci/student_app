{"ast":null,"code":"var _jsxFileName = \"/Users/veronica.t/Desktop/projects/react-redux-students-app/hw-redux-101/src/components/UpdateStudent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editContact } from '../actions/studentsActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateStudent = () => {\n  _s();\n\n  const [city, setCity] = useState('');\n  const [fName, setFName] = useState('');\n  const [isEdit, setIsEdit] = useState(false);\n  const studentsList = useSelector(state => state.students);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let editedContact = {\n      city,\n      fName\n    };\n    dispatch(editContact(editedContact));\n    setCity('');\n    setFName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: studentsList.map(student => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [student.fName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 55\n          }, this), student.city, /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setIsEdit(true),\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), isEdit ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => handleSubmit(e),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: student,\n              onChange: e => setFName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setCity(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 23\n          }, this) : '']\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(UpdateStudent, \"ZImd7KP8Z7gb3ksRO0OHXbpwFNA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UpdateStudent;\nexport default UpdateStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateStudent\");","map":{"version":3,"sources":["/Users/veronica.t/Desktop/projects/react-redux-students-app/hw-redux-101/src/components/UpdateStudent.jsx"],"names":["React","useState","useDispatch","useSelector","editContact","UpdateStudent","city","setCity","fName","setFName","isEdit","setIsEdit","studentsList","state","students","dispatch","handleSubmit","e","preventDefault","editedContact","map","student","target","value","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,WAAR,QAA0B,4BAA1B;;;;AACA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMW,YAAY,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAhC;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;;AACA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,aAAa,GAAG;AAClBb,MAAAA,IADkB;AAElBE,MAAAA;AAFkB,KAApB;AAIAO,IAAAA,QAAQ,CAACX,WAAW,CAACe,aAAD,CAAZ,CAAR;AACAZ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GATD;;AAUA,sBACE;AAAA,2BAgBE;AAAA,gBACGG,YAAY,CAACQ,GAAb,CAAiBC,OAAO,IAAI;AAC3B,4BAAO;AAAA,qBAAsBA,OAAO,CAACb,KAA9B,oBAAqC;AAAA;AAAA;AAAA;AAAA,kBAArC,EAA4Ca,OAAO,CAACf,IAApD,eACL;AAAG,YAAA,IAAI,EAAC,GAAR;AAAY,YAAA,OAAO,EAAE,MAAMK,SAAS,CAAC,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADK,EAEJD,MAAM,gBAAG;AAAM,YAAA,QAAQ,EAAGO,CAAD,IAAOD,YAAY,CAACC,CAAD,CAAnC;AAAA,oCACR;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,KAAK,EAAEI,OAA1B;AAAmC,cAAA,QAAQ,EAAGJ,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACK,MAAF,CAASC,KAAV;AAA5D;AAAA;AAAA;AAAA;AAAA,oBADQ,eAER;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,QAAQ,EAAGN,CAAD,IAAOV,OAAO,CAACU,CAAC,CAACK,MAAF,CAASC,KAAV;AAA3C;AAAA;AAAA;AAAA;AAAA,oBAFQ,eAGR;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHQ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,GAMG,EARL;AAAA,WAASF,OAAO,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAUD,OAXA;AADH;AAAA;AAAA;AAAA;AAAA;AAhBF,mBADF;AAiCD,CAjDD;;GAAMnB,a;UAIiBF,W,EACJD,W;;;KALbG,a;AAmDN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {editContact} from '../actions/studentsActions'\nconst UpdateStudent = () => {\n  const [city, setCity] = useState('')\n  const [fName, setFName] = useState('')\n  const [isEdit, setIsEdit] = useState(false)\n  const studentsList = useSelector(state => state.students)\n  const dispatch = useDispatch()\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    let editedContact = {\n      city,\n      fName\n    }\n    dispatch(editContact(editedContact))\n    setCity('')\n    setFName('')\n  }\n  return (\n    <>\n      {/* <ul>\n      {studentsList.map(students => {\n          <li>{students.fName} {students.city} <a href='#' onClick={()=>setIsEdit(true)}>edit</a>\n            {isEdit ? <form onSubmit={(e)=>handleSubmit(e)}>\n              <input type='text' onChange={(e)=>setFName(e.target.value)}>{studentsList.fName}</input>\n              <input type='text' onChange={(e)=>setCity(e.target.value)}>{studentsList.city}</input>\n              <button variant=\"primary\" type=\"submit\">\n                Submit\n              </button>\n            </form> :'' }\n            </li>\n        \n      })}\n        \n      </ul> */}\n      <ul>\n        {studentsList.map(student => {\n          return <li key={student.id}>{student.fName} <br />{student.city}\n            <a href='#' onClick={() => setIsEdit(true)}>edit</a>\n            {isEdit ? <form onSubmit={(e) => handleSubmit(e)}>\n              <input type='text' value={student} onChange={(e) => setFName(e.target.value)}></input>\n              <input type='text' onChange={(e) => setCity(e.target.value)}></input>\n              <button variant=\"primary\" type=\"submit\">\n                Submit\n              </button>\n            </form> : ''}\n          </li>\n        })}\n      </ul> \n    </>\n  )\n}\n\nexport default UpdateStudent\n"]},"metadata":{},"sourceType":"module"}