{"ast":null,"code":"var _jsxFileName = \"/Users/veronica.t/Desktop/projects/react-redux-students-app/hw-redux-101/src/components/UpdateStudent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editContact } from '../actions/studentsActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateStudent = () => {\n  _s();\n\n  const [city, setCity] = useState('');\n  const [fName, setFName] = useState('');\n  const [ID, setID] = useState('');\n  const [isEdit, setIsEdit] = useState(false);\n  const studentsList = useSelector(state => state.students);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let editedContact = {\n      ID,\n      city,\n      fName\n    };\n    dispatch(editContact(editedContact));\n    console.log(editedcontact);\n    setCity('');\n    setFName('');\n    setID('');\n  };\n\n  const handleEdit = student => {\n    console.log(student);\n    setID(student.ID);\n    setIsEdit(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isEdit ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setFName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: studentsList.map(student => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [student.fName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 55\n          }, this), student.city, /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => handleEdit({\n              student\n            }),\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdateStudent, \"IB08KjuONn3ZPAaEsZuiEtEPBFU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UpdateStudent;\nexport default UpdateStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateStudent\");","map":{"version":3,"sources":["/Users/veronica.t/Desktop/projects/react-redux-students-app/hw-redux-101/src/components/UpdateStudent.jsx"],"names":["React","useState","useDispatch","useSelector","editContact","UpdateStudent","city","setCity","fName","setFName","ID","setID","isEdit","setIsEdit","studentsList","state","students","dispatch","handleSubmit","e","preventDefault","editedContact","console","log","editedcontact","handleEdit","student","target","value","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,WAAR,QAA0B,4BAA1B;;;;AACA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,EAAD,EAAKC,KAAL,IAAcV,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMa,YAAY,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAhC;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;;AACA,QAAMgB,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,aAAa,GAAG;AAClBX,MAAAA,EADkB;AAElBJ,MAAAA,IAFkB;AAGlBE,MAAAA;AAHkB,KAApB;AAKAS,IAAAA,QAAQ,CAACb,WAAW,CAACiB,aAAD,CAAZ,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AACAjB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,KAAK,CAAC,EAAD,CAAL;AACD,GAZD;;AAcA,QAAMc,UAAU,GAAIC,OAAD,IAAa;AAC9BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACAf,IAAAA,KAAK,CAACe,OAAO,CAAChB,EAAT,CAAL;AACAG,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAJD;;AAKA,sBACE;AAAA,eACGD,MAAM,gBAAG;AAAM,MAAA,QAAQ,EAAGO,CAAD,IAAOD,YAAY,CAACC,CAAD,CAAnC;AAAA,8BACR;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGA,CAAD,IAAOV,QAAQ,CAACU,CAAC,CAACQ,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,cADQ,eAER;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGT,CAAD,IAAOZ,OAAO,CAACY,CAAC,CAACQ,MAAF,CAASC,KAAV;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFQ,eAGR;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHQ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAMG,EAPZ,eAQE;AAAA,gBACGd,YAAY,CAACe,GAAb,CAAiBH,OAAO,IAAI;AAC3B,4BAAO;AAAA,qBAAsBA,OAAO,CAAClB,KAA9B,oBAAqC;AAAA;AAAA;AAAA;AAAA,kBAArC,EAA4CkB,OAAO,CAACpB,IAApD,eACL;AAAG,YAAA,IAAI,EAAC,GAAR;AAAY,YAAA,OAAO,EAAE,MAAMmB,UAAU,CAAC;AAACC,cAAAA;AAAD,aAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADK;AAAA,WAASA,OAAO,CAACI,EAAjB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAqBD,CA/CD;;GAAMzB,a;UAKiBF,W,EACJD,W;;;KANbG,a;AAiDN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {editContact} from '../actions/studentsActions'\nconst UpdateStudent = () => {\n  const [city, setCity] = useState('')\n  const [fName, setFName] = useState('')\n  const [ID, setID] = useState('')\n  const [isEdit, setIsEdit] = useState(false)\n  const studentsList = useSelector(state => state.students)\n  const dispatch = useDispatch()\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    let editedContact = {\n      ID,\n      city,\n      fName\n    }\n    dispatch(editContact(editedContact))\n    console.log(editedcontact);\n    setCity('')\n    setFName('')\n    setID('')\n  }\n\n  const handleEdit = (student) => {\n    console.log(student)\n    setID(student.ID)\n    setIsEdit(true)\n  }\n  return (\n    <>\n      {isEdit ? <form onSubmit={(e) => handleSubmit(e)}>\n        <input type='text' onChange={(e) => setFName(e.target.value)} ></input>\n        <input type='text' onChange={(e) => setCity(e.target.value)} ></input>\n        <button variant=\"primary\" type=\"submit\">\n          Submit\n        </button>\n      </form> : ''}\n      <ul>\n        {studentsList.map(student => {\n          return <li key={student.id}>{student.fName} <br />{student.city}\n            <a href='#' onClick={() => handleEdit({student})}>edit</a>\n            \n          </li>\n          \n        })}\n      </ul> \n      \n    </>\n  )\n}\n\nexport default UpdateStudent\n"]},"metadata":{},"sourceType":"module"}